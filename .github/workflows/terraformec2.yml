
name: 'Terraform'

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS Credentials Action For GitHub Actions
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2 
        
    - name: Setup Terraform CLI
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.2.0
        terraform_wrapper: false 

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan -lock=false

    - name: Terraform Apply
      run: terraform apply -auto-approve -lock=false  
    
#    - run: echo SERVER_PUBLIC_IP=${{ needs.deploy-infra.outputs.SERVER_PUBLIC_DNS }} >> $GITHUB_ENV
    
#    - run: echo SERVER_PUBLIC_IP=${{ needs.deploy-infra.outputs.SERVER_PUBLIC_DNS }} >> dev.inventory

#    - name: Sleep for 30 seconds
#      run: sleep 30s
#      shell: bash

    - name: Output as a variable
      run: terraform output -json ec2instance | jq -r '.[0]' | tee dev.inventory

    - name: Set IP address as environment variable
      run: |
            ec2instance=$(cat dev.inventory)
            echo "ec2instance"=${ec2instance} >> $GITHUB_ENV
    - name: add IP address to dev.inventory file
      run: cat output.txt >> dev.inventory

    - name: install ansible
      run: sudo apt install ansible
    
    - name: install ansible
      run: sudo apt install ansible
    - name: save keyfile
      run: 'echo "$SSH_KEY" > key.pem'
      shell: bash
      env:
        SSH_KEY: ${{secrets.SSH_KEY}}
    - name: change permissions
      run: chmod 400 key.pem
    - name: Run playbook
      run: ansible-playbook -i dev.inventory --private-key key.pem playbook-copyfile.yml -vv