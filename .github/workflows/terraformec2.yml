
name: 'Terraform'

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS Credentials Action For GitHub Actions
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2 
        
    - name: Setup Terraform CLI
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.2.0
        terraform_wrapper: false 

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan -lock=false

    - name: Terraform Apply
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: terraform apply -auto-approve -lock=false

    - name: Set output
      id: set-dns
      run: |-
            echo "::set-output name=instance_public_dns::$(terraform output instance_public_ip)"
      working-directory: /usr/bin/bash  

    - run: echo SERVER_PUBLIC_IP=${{ needs.deploy-infra.outputs.SERVER_PUBLIC_DNS }} >> $GITHUB_ENV
    
    - name: copy file via ssh key
      uses: appleboy/scp-action@master
      with:          
        host: ${{ env.EC2INSTANCE }}
        username: ubuntu
        key: ${{ secrets.SSH_KEY }}
        source: "docker-compose.yml"
        target: "/home/ubuntu/"

    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.EC2INSTANCE }}
        username: ubuntu
        key: ${{ secrets.SSH_KEY }}
        script: | 
                 sudo apt install docker -y
                 sudo apt install docker-compose -y
                 docker-compose up -d